<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SQL</title>
    <link rel="stylesheet" href="../css/style.css">
</head>
<body>
    <?php
        require('../header.php');
    ?>
    <div class="container_flex">
        <div class="sidebar">
            <?php
                require('../nav.php');
            ?>
        </div>
        <div class="content">
            <h2>Транзакции стр. 231</h2>
            <div>
                <h3>Блокировки</h3>
                <p><b>Блокировка</b> <i>(locking)</i> – механизм управления одновременным использованием ресурсов данных.
                <p><b>Стратегии блокировки:</b>
                <p>1. <b>Блокировка записи</b> <i>(write lock)</i>
                <p>При записи данных, должны запрашивать и получать от сервера <b><i>блокировку записи</b> (write lock)</i> для изменения данных.
                <p>При чтении данных, должны запрашивать и получать от сервера <b><i>блокировку чтения</b> (read lock)</i> для чтения данных.
                <p>Чтение может осуществлятся одновременно многими пользователями.
                <p>Для каждой таблицы <i>(или ее части)</i> одновременно выдается только одна блокировка записи и блокируются запросы на чтение.
                <p>2. <b>Контроль версий</b> <i>(versioning)</i>
                <p>При записи данных, должны запрашивать и получать от сервера <b><i>блокировку записи</i></b>.<br>
                Но для запроса данных не нужны блокировки, данные представляются неизменными, начиная с момента начала запроса до его завершения.
                <p><b>Microsoft SQL Server</b> использует первый подход.
                <p><b>Oracle Database</b> – второй подход.
                <p><b>MySQL</b> – оба подхода (в зависимости от выбранного пользователем механизма хранения (storage engine).
                <p><b>Блокировка ресурса</b> блокирование может выполняться с одной из трех <i><b>детализаций</b> (granularities)</i>:
                <p><b><i>Блокирование таблицы</i></b> - предотвращает одновременное изменение несколькими пользователями данных одной таблицы.
                <p><b><i>Блокирование страницы</i></b> - предотвращает одновременное изменение несколькими пользователями данных одной страницы таблицы (страница – сегмент памяти, обычно от 2 до 16 Кбайт).
                <p><b><i>Блокирование строки</i></b> - предотвращает одновременное изменение несколькими пользователями одной строки таблицы.
                <p><b>Microsoft SQL Server</b> использует блокировки страницы и строки.
                <p><b>Oracle Database</b> – использует блокировку строки.
                <p><b>MySQL</b> – использует все блокировки (в зависимости от выбранного пользователем механизма хранения (storage engine).
                <h3>Транзакция</h3>
                <p><b><i>Транзакция (transaction)</i></b> - механизм группировки нескольких SQL выражений, позволяющий успешно выполниться всем или ни одному из них.
                <p>Сначала начинается транзакция, затем выполняется SQL выражения, если все проходит успешно, завершает транзакцию, формируя команду <b><i>commit (фиксировать)</i></b>.
                <p>Иначе программа выдает команду <b><i>откат (rollback)</i></b>, которая указывает серверу отменить все изменения, внесенные с момента начала транзакции.
<pre style="border-left:0.5px solid grey;">
<b>START TRANSACTION;</b>

/* Снять деньги с первого счета, обеспечив достаточный остаток */
<b>UPDATE</b> account <b>SET</b> avail_balance = avail_balance - 500
<b>WHERE</b> account_id = 9988
  <b>AND</b> avail_balance > 500;

<b>IF</b> <Предыдущим выражением была изменена ровно одна строка> THEN
  /* Внести деньги на следующий счет */
  <b>UPDATE</b> account <b>SET</b> avail_balance = avail_balance + 500
  <b>WHERE</b> account_id = 9989;

  <b>IF</b> <Предыдущим выражением была изменена ровно одна строка> THEN
    /* Все получилось, сделать изменения постоянными */
    <b>COMMIT;</b>
  <b>ELSE</b>
    /* Что то не так, отменить все изменения, сделанные в данной транзакции */
    <b>ROLLBACK;</b>
  <b>END IF;</b>

<b>ELSE</b>
  /* Недостаток средств на счете или при обновлении возникла ошибка */
  <b>ROLLBACK;</b>
<b>END IF;</b>
</pre>
                <p><b><i>Фрагмент кода написан на псевдокоде и не пытается имитировать ни один конкретный язык.</i></b>
            </div>
        </div>
    </div>
</body>
</html>